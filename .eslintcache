[{"C:\\javascript\\Frontend3\\company-master\\src\\index.js":"1","C:\\javascript\\Frontend3\\company-master\\src\\App.js":"2","C:\\javascript\\Frontend3\\company-master\\src\\reportWebVitals.js":"3","C:\\javascript\\Frontend3\\company-master\\src\\pages\\LoginPage.jsx":"4","C:\\javascript\\Frontend3\\company-master\\src\\components\\LoginForm.jsx":"5","C:\\javascript\\Frontend3\\company-master\\src\\pages\\HomePage.jsx":"6","C:\\javascript\\Frontend3\\company-master\\src\\components\\CustomerListItem.jsx":"7","C:\\javascript\\Frontend3\\company-master\\src\\pages\\CreateCostumerPage.jsx":"8","C:\\javascript\\Frontend3\\company-master\\src\\components\\CreateCostumerForm.jsx":"9","C:\\javascript\\Frontend3\\company-master\\src\\pages\\CustomerDetailPage.jsx":"10","C:\\javascript\\Frontend3\\company-master\\src\\components\\Button.jsx":"11","C:\\javascript\\Frontend3\\company-master\\src\\pages\\CustomerUpdatePage.jsx":"12","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledLoginPage.jsx":"13","C:\\javascript\\Frontend3\\company-master\\src\\components\\SideBar.jsx":"14","C:\\javascript\\Frontend3\\company-master\\src\\contexts\\UserContext.js":"15","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledContainer.jsx":"16","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledSideBar.jsx":"17","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledCustomerListItem.jsx":"18","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledButtons.jsx":"19","C:\\javascript\\Frontend3\\company-master\\src\\components\\UpdateCustomerForm.jsx":"20","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledForms.jsx":"21","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledDetailPage.jsx":"22","C:\\javascript\\Frontend3\\company-master\\src\\pages\\LandingPage.jsx":"23","C:\\javascript\\Frontend3\\company-master\\src\\data\\fetchKit.js":"24","C:\\javascript\\Frontend3\\company-master\\src\\data\\FetchKit.js":"25"},{"size":383,"mtime":1610721743929,"results":"26","hashOfConfig":"27"},{"size":1772,"mtime":1610895545651,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":296,"mtime":1610647830899,"results":"30","hashOfConfig":"27"},{"size":2076,"mtime":1610849573001,"results":"31","hashOfConfig":"27"},{"size":219,"mtime":1610479278145,"results":"32","hashOfConfig":"27"},{"size":1569,"mtime":1610917420004,"results":"33","hashOfConfig":"27"},{"size":404,"mtime":1610760461082,"results":"34","hashOfConfig":"27"},{"size":3405,"mtime":1610918152239,"results":"35","hashOfConfig":"27"},{"size":2629,"mtime":1610917798948,"results":"36","hashOfConfig":"27"},{"size":2069,"mtime":1610917235097,"results":"37","hashOfConfig":"27"},{"size":482,"mtime":1610848997406,"results":"38","hashOfConfig":"27"},{"size":316,"mtime":1610647998901,"results":"39","hashOfConfig":"27"},{"size":1221,"mtime":1610829286852,"results":"40","hashOfConfig":"27"},{"size":83,"mtime":1610554092404,"results":"41","hashOfConfig":"27"},{"size":185,"mtime":1610911237424,"results":"42","hashOfConfig":"27"},{"size":666,"mtime":1610905252256,"results":"43","hashOfConfig":"27"},{"size":741,"mtime":1610579407567,"results":"44","hashOfConfig":"27"},{"size":1609,"mtime":1610663554840,"results":"45","hashOfConfig":"27"},{"size":3151,"mtime":1610917564305,"results":"46","hashOfConfig":"27"},{"size":1339,"mtime":1610843298558,"results":"47","hashOfConfig":"27"},{"size":782,"mtime":1610666885982,"results":"48","hashOfConfig":"27"},{"size":313,"mtime":1610723862934,"results":"49","hashOfConfig":"27"},{"size":2169,"mtime":1610817605182,"results":"50","hashOfConfig":"27"},{"size":2356,"mtime":1610917816602,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1tztmwu",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},"C:\\javascript\\Frontend3\\company-master\\src\\index.js",[],["110","111"],"C:\\javascript\\Frontend3\\company-master\\src\\App.js",[],"C:\\javascript\\Frontend3\\company-master\\src\\reportWebVitals.js",[],"C:\\javascript\\Frontend3\\company-master\\src\\pages\\LoginPage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\components\\LoginForm.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\pages\\HomePage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\components\\CustomerListItem.jsx",["112"],"import React, { useEffect, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport FetchKit from '../data/FetchKit'\r\nimport Button from './Button'\r\nimport {StyledDiv} from '../Style/StyledCustomerListItem'\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\n\r\n\r\nexport default function CustomerListItem() {\r\n    const history = useHistory()\r\n    const { customerList, setAuth, setCustomerList, isUpToDate, setIsUpToDate} = useContext(UserContext)\r\n    const token = localStorage.getItem(\"USERTOKEN\")\r\n    \r\n\r\n    useEffect(()=>{\r\n        if( !isUpToDate ){\r\n            setAuth(true)\r\n            FetchKit.getAllCostumersFetch(token)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCustomerList(data.results)\r\n                console.log(\"uppdaterad\")\r\n                setIsUpToDate(true)\r\n                \r\n            })              \r\n        }\r\n\r\n        else if(!token){\r\n            history.push(\"/login\")\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <StyledDiv >\r\n            { customerList ? \r\n                customerList.map(item =>{\r\n                    return (\r\n                    <Link  key={item.id} to={`/customers/${item.id}`}>\r\n                        <div>\r\n                            <p> {item.name}</p>\r\n                        </div>\r\n                    </Link>\r\n                    )\r\n                })\r\n            :\r\n                <h1>LOADING</h1>\r\n            }      \r\n            <Button label={\"add\"} to={\"/create\"} add={true}/>\r\n        </StyledDiv>\r\n    )\r\n}\r\n","C:\\javascript\\Frontend3\\company-master\\src\\pages\\CreateCostumerPage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\components\\CreateCostumerForm.jsx",["113"],"import React, {useState, useEffect, useContext, useRef} from 'react'\r\nimport FetchKit from '../data/FetchKit'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { StyledCreateForm } from '../Style/StyledForms'\r\nimport Button from './Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBuilding, faCashRegister, faMailBulk, faPhoneAlt, faSitemap } from '@fortawesome/free-solid-svg-icons'\r\nimport { faFirefoxBrowser, faMonero, faVuejs } from '@fortawesome/free-brands-svg-icons'\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\n\r\nexport default function CreateCostumerForm() {\r\n    const [formData, setFormData ]= useState({})\r\n    const history = useHistory()\r\n    const { setIsUpToDate} = useContext(UserContext)\r\n    const TOKEN = localStorage.getItem(\"USERTOKEN\")\r\n    const refName = useRef()\r\n    const refVat = useRef()\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!localStorage.getItem(\"USERTOKEN\")){\r\n            history.push(\"/login\")\r\n        }\r\n    },[history])\r\n\r\n    function handleOnChange(e){\r\n        setFormData( {...formData, [e.target.name]: e.target.value})\r\n        if(e.target.name == \"name\") console.log(e.target.value)\r\n        if(e.target.name.length>0){\r\n            refName.current.style.color = \"#B2B2B2\"\r\n        }\r\n    }\r\n\r\n    function renderInput(icon, name, label, type, ref){\r\n        return (\r\n                <div>\r\n                <span>{icon}</span>\r\n                <input \r\n                    placeholder ={label}\r\n                    type={type || \"text\"}\r\n                    name={name} \r\n                    onChange={handleOnChange}\r\n                    ref ={ref}\r\n                    />\r\n                </div>\r\n        )\r\n    }\r\n\r\n    function handleOnSubmit(e){\r\n        const vat = /SE\\d{10}/\r\n        e.preventDefault()\r\n        \r\n        if(formData.name && (vat.test(formData.vatNr))){\r\n            setIsUpToDate(false)\r\n            FetchKit.createCostumerFetch(formData,TOKEN)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                history.push(\"/homepage\")\r\n            })\r\n        }\r\n\r\n        else{\r\n            console.log(refVat)\r\n            if(!formData.name) refName.current.style.color = \"#ff0000\"\r\n            if(!vat.test(formData.vatNr)) refVat.current.style.color = \"#ff0000\"\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <StyledCreateForm onSubmit={handleOnSubmit}>\r\n            {renderInput(<FontAwesomeIcon icon={faBuilding}/>,\"name\", \"Organisation Name\", \"\", refName)}\r\n            {renderInput(<FontAwesomeIcon icon={faSitemap}/>,\"organisationNr\", \"Organisation Number\")}\r\n            {renderInput(<FontAwesomeIcon icon={faVuejs}/>, \"vatNr\", \"VAT number\",\"\", refVat)}\r\n            {renderInput(<FontAwesomeIcon icon={faMonero}/>, \"reference\", \"Reference\")}\r\n            {renderInput(<FontAwesomeIcon icon={faCashRegister}/>, \"paymentTerm\", \"Payment Term\", \"number\")}\r\n            {renderInput(<FontAwesomeIcon icon={faFirefoxBrowser}/>, \"website\", \"website\", \"url\")}\r\n            {renderInput(<FontAwesomeIcon icon={faMailBulk}/>, \"email\", \"Email\", \"email\")}\r\n            {renderInput(<FontAwesomeIcon icon={faPhoneAlt}/>, \"phoneNumber\", \"tel\")}\r\n            <Button \r\n                type={\"submit\"} \r\n                label={\"create\"}\r\n                create={true}\r\n                to={\"/homepage\"}\r\n            />\r\n        </StyledCreateForm>\r\n\r\n    )\r\n}\r\n","C:\\javascript\\Frontend3\\company-master\\src\\pages\\CustomerDetailPage.jsx",["114"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport FetchKit from '../data/FetchKit'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Button from '../components/Button'\r\nimport {StyledDetailPage} from '../Style/StyledDetailPage'\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\n\r\nexport default function CustomerDetailPage(props) {\r\n    const history = useHistory()\r\n\r\n    const customerId = props.match.params.id\r\n    const [customerData ] = useState({})\r\n    const { setIsUpToDate, customerList} = useContext(UserContext)\r\n    const token = localStorage.getItem(\"USERTOKEN\")\r\n\r\n\r\n\r\n    function deleteCustomerItem(){\r\n        FetchKit.deleteCostumerItemFetch(customerId, token)\r\n        .then(() => history.push(\"/homepage\"))\r\n        setIsUpToDate(false)\r\n    }\r\n\r\n    function findIndex(){\r\n        if(customerList){\r\n            for(let i = 0; i < customerList.length; ++i){\r\n                if(customerList[i].id === Number(customerId)){\r\n                    return i\r\n                }\r\n            }\r\n\r\n        }\r\n    } \r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"USERTOKEN\")){\r\n\r\n        }\r\n        else{\r\n            history.push(\"/login\")\r\n        }\r\n    },[])\r\n\r\n    function handleOnClick(){\r\n        deleteCustomerItem()\r\n    }\r\n\r\n    return (\r\n        \r\n        <StyledDetailPage>\r\n            {customerData ? \r\n            \r\n            <div>\r\n                {Object.entries(customerList[findIndex()]).map((item, index) =>{\r\n                    if(item[0] !== \"id\" && item[0] !== \"parent\" && item[0] !== \"address\"){\r\n                        return ( \r\n                                <div key={index}  className={\"firstDiv\"}>\r\n                                    <div className=\"h2Div\">\r\n                                        <h2>{item[0]}</h2>\r\n                                    </div>\r\n                                    <div className=\"h1Div\">\r\n                                        <h1>{item[1]}</h1>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else return \"\"\r\n                    })}\r\n                    \r\n            </div> \r\n\r\n            \r\n            : \r\n            <h1>loading</h1> \r\n            }\r\n\r\n            <div className={\"buttons\"}>\r\n                <Button label={\"Delete\"} del={handleOnClick}/>\r\n                <Button label={\"edit\"} edit={true} to={`/customers/${customerId}/edit`} />\r\n            </div>\r\n                <Button label={\"back\"} to={\"/homepage\"} back={true}/>\r\n        </StyledDetailPage>\r\n    )\r\n}\r\n","C:\\javascript\\Frontend3\\company-master\\src\\components\\Button.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\pages\\CustomerUpdatePage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledLoginPage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\components\\SideBar.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\contexts\\UserContext.js",[],"C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledContainer.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledSideBar.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledCustomerListItem.jsx",[],["115","116"],"C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledButtons.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\components\\UpdateCustomerForm.jsx",["117"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport FetchKit from '../data/FetchKit'\r\nimport Button from './Button'\r\nimport { StyledCreateForm } from '../Style/StyledForms'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBuilding, faCashRegister, faMailBulk, faPhoneAlt, faSitemap } from '@fortawesome/free-solid-svg-icons'\r\nimport { faFirefoxBrowser, faMonero, faVuejs } from '@fortawesome/free-brands-svg-icons'\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\n\r\n\r\n\r\nexport default function UpdateCustomerForm({props}) {\r\n    const [formData, setFormData] = useState({})\r\n    const history = useHistory()\r\n    const customerId = props.match.params.id\r\n    const { setIsUpToDate, customerList} = useContext(UserContext)\r\n    const token = localStorage.getItem(\"USERTOKEN\")\r\n\r\n    \r\n\r\n    function handleOnChange(e){\r\n        setFormData( {...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    function handleOnSubmit(e){\r\n        e.preventDefault()\r\n        FetchKit.updateCostumerItemFetch(customerId, formData, token)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setIsUpToDate(false)\r\n            history.push(\"/homepage\")\r\n        }) \r\n    }\r\n\r\n    function renderInput(icon, name, label, type){\r\n        return (\r\n                <div>\r\n                    <span>{icon}</span>\r\n                    <input \r\n                        placeholder={label}\r\n                        type={type || \"text\"}\r\n                        name={name} \r\n                        value={formData[name] || \"\"}\r\n                        onChange={handleOnChange}\r\n                        />\r\n                </div>\r\n        )\r\n    }\r\n\r\n    function findIndex(){\r\n        for(let i = 0; i < customerList.length; ++i){\r\n            if(customerList[i].id === Number(customerId)){\r\n                return i\r\n            }\r\n        }\r\n    } \r\n    \r\n    useEffect(()=>{\r\n        if(!localStorage.getItem(\"USERTOKEN\")) {history.push(\"/login\")}\r\n        setFormData(customerList[findIndex()])\r\n        \r\n    }, [customerId])\r\n\r\n    return (\r\n            <StyledCreateForm>\r\n                {renderInput(<FontAwesomeIcon icon={faBuilding}/>,\"name\", \"Organisation Name\")}\r\n                {renderInput(<FontAwesomeIcon icon={faSitemap}/>,\"organisationNr\", \"Organisation Number\")}\r\n                {renderInput(<FontAwesomeIcon icon={faVuejs}/>, \"vatNr\", \"VAT number\")}\r\n                {renderInput(<FontAwesomeIcon icon={faMonero}/>, \"reference\", \"Reference\")}\r\n                {renderInput(<FontAwesomeIcon icon={faCashRegister}/>, \"paymentTerm\", \"Payment Term\")}\r\n                {renderInput(<FontAwesomeIcon icon={faFirefoxBrowser}/>, \"website\", \"website\", \"url\")}\r\n                {renderInput(<FontAwesomeIcon icon={faMailBulk}/>, \"email\", \"Email\")}\r\n                {renderInput(<FontAwesomeIcon icon={faPhoneAlt}/>, \"phoneNumber\", \"tel\")}\r\n                <Button \r\n                    handleClick={handleOnSubmit} \r\n                    update={true} \r\n                    label={\"update\"}/>\r\n            </StyledCreateForm>\r\n    )\r\n}\r\n","C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledForms.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\Style\\StyledDetailPage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\pages\\LandingPage.jsx",[],"C:\\javascript\\Frontend3\\company-master\\src\\data\\fetchKit.js",[],["118","119"],"C:\\javascript\\Frontend3\\company-master\\src\\data\\FetchKit.js",["120"],"const url = \"https://frebi.willandskill.eu\"\r\nconst auth = \"/api-token-auth/\"\r\nconst costumers = \"/api/v1/customers/\"\r\nconst user = \"/api/v1/me\"\r\n\r\nconst token = localStorage.getItem(\"USERTOKEN\")\r\nconst headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${token}`\r\n}\r\n\r\nexport default class FetchKit {\r\n\r\n    \r\n    static loginFetch(payload){\r\n    \r\n        return fetch(url + auth,{\r\n            method: \"POST\", \r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n                \r\n              }\r\n        })\r\n    }\r\n\r\n    static createCostumerFetch(formData, TOKEN){\r\n        return fetch(url + costumers,{\r\n            method: \"POST\", \r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${TOKEN}`\r\n            }\r\n        })\r\n    }\r\n    static getAllCostumersFetch(token){\r\n\r\n        return fetch(url + costumers,{\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCostumerItemFetch(id){\r\n\r\n        return fetch(`${url}${costumers}${id}/`,{\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        }) \r\n    }\r\n\r\n    static deleteCostumerItemFetch(id, TOKEN){\r\n\r\n        return fetch(`${url}${costumers}${id}/`,{\r\n            method: \"DELETE\", \r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${TOKEN}`\r\n            }         \r\n        }) \r\n    }\r\n\r\n    static updateCostumerItemFetch(id, body, TOKEN){\r\n\r\n        return fetch(`${url}${costumers}${id}/`,{\r\n            method: \"PUT\", \r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${TOKEN}`\r\n            }       \r\n        }) \r\n    }\r\n\r\n    static userDetailFetch(token){\r\n\r\n        return fetch(url + user,{\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":32,"column":7,"nodeType":"127","endLine":32,"endColumn":9,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":30,"column":26,"nodeType":"131","messageId":"132","endLine":30,"endColumn":28},{"ruleId":"125","severity":1,"message":"133","line":43,"column":7,"nodeType":"127","endLine":43,"endColumn":9,"suggestions":"134"},{"ruleId":"121","replacedBy":"135"},{"ruleId":"123","replacedBy":"136"},{"ruleId":"125","severity":1,"message":"137","line":64,"column":8,"nodeType":"127","endLine":64,"endColumn":20,"suggestions":"138"},{"ruleId":"121","replacedBy":"139"},{"ruleId":"123","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":7,"column":7,"nodeType":"143","messageId":"144","endLine":7,"endColumn":14},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'isUpToDate', 'setAuth', 'setCustomerList', 'setIsUpToDate', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["148"],["145"],["146"],"React Hook useEffect has missing dependencies: 'customerList', 'findIndex', and 'history'. Either include them or remove the dependency array.",["149"],["145"],["146"],"no-unused-vars","'headers' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [history, isUpToDate, setAuth, setCustomerList, setIsUpToDate, token]",{"range":"156","text":"157"},"Update the dependencies array to be: [history]",{"range":"158","text":"159"},"Update the dependencies array to be: [customerId, customerList, findIndex, history]",{"range":"160","text":"161"},[1001,1003],"[history, isUpToDate, setAuth, setCustomerList, setIsUpToDate, token]",[1210,1212],"[history]",[2119,2131],"[customerId, customerList, findIndex, history]"]