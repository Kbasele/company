{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\javascript\\\\Frontend3\\\\company-master\\\\src\\\\components\\\\UpdateCustomerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FetchKit from '../data/fetchKit';\nimport Button from './Button';\nimport { StyledCreateForm } from '../Style/StyledForms';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBuilding, faCashRegister, faMailBulk, faPhoneAlt, faSitemap } from '@fortawesome/free-solid-svg-icons';\nimport { faFirefoxBrowser, faMonero, faVuejs } from '@fortawesome/free-brands-svg-icons';\nexport default function UpdateCustomerForm({\n  props\n}) {\n  _s();\n\n  const [formData, setFormData] = useState({});\n  const history = useHistory();\n  const customerId = props.match.params.id;\n\n  function handleOnChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    FetchKit.updateCostumerItemFetch(customerId, formData).then(res => res.json()).then(data => {\n      history.push(\"/homepage\");\n    });\n  }\n\n  function renderInput(icon, name, label, type) {\n    return /*#__PURE__*/_jsxDEV(StyledCreateForm, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: label,\n          type: type || \"text\",\n          name: name,\n          value: formData[name],\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  useEffect(() => {\n    FetchKit.getCostumerItemFetch(customerId).then(res => res.json()).then(data => setFormData(data));\n  }, [customerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBuilding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 30\n      }, this), \"name\", \"Organisation Name\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSitemap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 30\n      }, this), \"organisationNr\", \"Organisation Number\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faVuejs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 30\n      }, this), \"vatNr\", \"VAT number\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faMonero\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 30\n      }, this), \"reference\", \"Reference\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCashRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 30\n      }, this), \"paymentTerm\", \"Payment Term\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFirefoxBrowser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 30\n      }, this), \"website\", \"website\", \"url\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faMailBulk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }, this), \"email\", \"Email\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPhoneAlt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 30\n      }, this), \"phoneNumber\", \"tel\"), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleOnSubmit,\n        update: true,\n        label: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateCustomerForm, \"iKdlSzTFjLfWvIheMe2mo/FPbLM=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateCustomerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCustomerForm\");","map":{"version":3,"sources":["C:/javascript/Frontend3/company-master/src/components/UpdateCustomerForm.jsx"],"names":["React","useState","useEffect","useHistory","FetchKit","Button","StyledCreateForm","FontAwesomeIcon","faBuilding","faCashRegister","faMailBulk","faPhoneAlt","faSitemap","faFirefoxBrowser","faMonero","faVuejs","UpdateCustomerForm","props","formData","setFormData","history","customerId","match","params","id","handleOnChange","e","target","name","value","handleOnSubmit","preventDefault","updateCostumerItemFetch","then","res","json","data","push","renderInput","icon","label","type","getCostumerItemFetch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport FetchKit from '../data/fetchKit'\r\nimport Button from './Button'\r\nimport { StyledCreateForm } from '../Style/StyledForms'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBuilding, faCashRegister, faMailBulk, faPhoneAlt, faSitemap } from '@fortawesome/free-solid-svg-icons'\r\nimport { faFirefoxBrowser, faMonero, faVuejs } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\n\r\nexport default function UpdateCustomerForm({props}) {\r\n    const [formData, setFormData] = useState({})\r\n    const history = useHistory()\r\n    const customerId = props.match.params.id\r\n\r\n    function handleOnChange(e){\r\n        setFormData( {...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    function handleOnSubmit(e){\r\n        e.preventDefault()\r\n        FetchKit.updateCostumerItemFetch(customerId, formData)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            history.push(\"/homepage\")\r\n        })\r\n        \r\n    }\r\n\r\n    function renderInput(icon, name, label, type){\r\n        return (\r\n            <StyledCreateForm>\r\n                <div>\r\n                    <span>{icon}</span>\r\n                    <input \r\n                        placeholder={label}\r\n                        type={type || \"text\"}\r\n                        name={name} \r\n                        value={formData[name]}\r\n                        onChange={handleOnChange}\r\n                        />\r\n                </div>\r\n            </StyledCreateForm>\r\n        )\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        FetchKit.getCostumerItemFetch(customerId)\r\n        .then(res => res.json())\r\n        .then(data => setFormData(data))\r\n    }, [customerId])\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                {renderInput(<FontAwesomeIcon icon={faBuilding}/>,\"name\", \"Organisation Name\")}\r\n                {renderInput(<FontAwesomeIcon icon={faSitemap}/>,\"organisationNr\", \"Organisation Number\")}\r\n                {renderInput(<FontAwesomeIcon icon={faVuejs}/>, \"vatNr\", \"VAT number\")}\r\n                {renderInput(<FontAwesomeIcon icon={faMonero}/>, \"reference\", \"Reference\")}\r\n                {renderInput(<FontAwesomeIcon icon={faCashRegister}/>, \"paymentTerm\", \"Payment Term\")}\r\n                {renderInput(<FontAwesomeIcon icon={faFirefoxBrowser}/>, \"website\", \"website\", \"url\")}\r\n                {renderInput(<FontAwesomeIcon icon={faMailBulk}/>, \"email\", \"Email\")}\r\n                {renderInput(<FontAwesomeIcon icon={faPhoneAlt}/>, \"phoneNumber\", \"tel\")}\r\n                <Button \r\n                    handleClick={handleOnSubmit} \r\n                    update={true} \r\n                    label={\"update\"}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}