{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\javascript\\\\Frontend3\\\\company-master\\\\src\\\\components\\\\UpdateCustomerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FetchKit from '../data/FetchKit';\nimport Button from './Button';\nimport { StyledCreateForm } from '../Style/StyledForms';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBuilding, faCashRegister, faMailBulk, faPhoneAlt, faSitemap } from '@fortawesome/free-solid-svg-icons';\nimport { faFirefoxBrowser, faMonero, faVuejs } from '@fortawesome/free-brands-svg-icons';\nimport { UserContext } from '../contexts/UserContext';\nexport default function UpdateCustomerForm({\n  props\n}) {\n  _s();\n\n  const [formData, setFormData] = useState({});\n  const history = useHistory();\n  const customerId = props.match.params.id;\n  const {\n    setIsUpToDate,\n    customerList\n  } = useContext(UserContext);\n  const token = localStorage.getItem(\"USERTOKEN\");\n\n  function handleOnChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    FetchKit.updateCostumerItemFetch(customerId, formData, token).then(res => res.json()).then(data => {\n      setIsUpToDate(false);\n      history.push(\"/homepage\");\n    });\n  }\n\n  function renderInput(icon, name, label, type) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: label,\n        type: type || \"text\",\n        name: name,\n        value: formData[name] || \"\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  }\n\n  function findIndex() {\n    console.log(\"hej\");\n\n    for (let i = 0; i < customerList.length; ++i) {\n      if (customerList[i].id === Number(customerId)) {\n        return i;\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"USERTOKEN\")) {\n      history.push(\"/login\");\n    }\n\n    setFormData(customerList[findIndex()]);\n  }, [customerId]);\n  return /*#__PURE__*/_jsxDEV(StyledCreateForm, {\n    children: [renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faBuilding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }, this), \"name\", \"Organisation Name\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSitemap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }, this), \"organisationNr\", \"Organisation Number\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faVuejs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }, this), \"vatNr\", \"VAT number\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faMonero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 30\n    }, this), \"reference\", \"Reference\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCashRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 30\n    }, this), \"paymentTerm\", \"Payment Term\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faFirefoxBrowser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 30\n    }, this), \"website\", \"website\", \"url\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faMailBulk\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this), \"email\", \"Email\"), renderInput( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faPhoneAlt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 30\n    }, this), \"phoneNumber\", \"tel\"), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleOnSubmit,\n      update: true,\n      label: \"update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UpdateCustomerForm, \"/vLkyDIYE2aTuqs+vWcRuwm9zOM=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateCustomerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCustomerForm\");","map":{"version":3,"sources":["C:/javascript/Frontend3/company-master/src/components/UpdateCustomerForm.jsx"],"names":["React","useState","useEffect","useContext","useHistory","FetchKit","Button","StyledCreateForm","FontAwesomeIcon","faBuilding","faCashRegister","faMailBulk","faPhoneAlt","faSitemap","faFirefoxBrowser","faMonero","faVuejs","UserContext","UpdateCustomerForm","props","formData","setFormData","history","customerId","match","params","id","setIsUpToDate","customerList","token","localStorage","getItem","handleOnChange","e","target","name","value","handleOnSubmit","preventDefault","updateCostumerItemFetch","then","res","json","data","push","renderInput","icon","label","type","findIndex","console","log","i","length","Number"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport FetchKit from '../data/FetchKit'\r\nimport Button from './Button'\r\nimport { StyledCreateForm } from '../Style/StyledForms'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBuilding, faCashRegister, faMailBulk, faPhoneAlt, faSitemap } from '@fortawesome/free-solid-svg-icons'\r\nimport { faFirefoxBrowser, faMonero, faVuejs } from '@fortawesome/free-brands-svg-icons'\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\n\r\n\r\n\r\nexport default function UpdateCustomerForm({props}) {\r\n    const [formData, setFormData] = useState({})\r\n    const history = useHistory()\r\n    const customerId = props.match.params.id\r\n    const { setIsUpToDate, customerList} = useContext(UserContext)\r\n    const token = localStorage.getItem(\"USERTOKEN\")\r\n\r\n    \r\n\r\n    function handleOnChange(e){\r\n        setFormData( {...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    function handleOnSubmit(e){\r\n        e.preventDefault()\r\n        FetchKit.updateCostumerItemFetch(customerId, formData, token)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setIsUpToDate(false)\r\n            history.push(\"/homepage\")\r\n        }) \r\n    }\r\n\r\n    function renderInput(icon, name, label, type){\r\n        return (\r\n                <div>\r\n                    <span>{icon}</span>\r\n                    <input \r\n                        placeholder={label}\r\n                        type={type || \"text\"}\r\n                        name={name} \r\n                        value={formData[name] || \"\"}\r\n                        onChange={handleOnChange}\r\n                        />\r\n                </div>\r\n        )\r\n    }\r\n\r\n    function findIndex(){\r\n        console.log(\"hej\")\r\n        for(let i = 0; i < customerList.length; ++i){\r\n            if(customerList[i].id === Number(customerId)){\r\n                return i\r\n            }\r\n        }\r\n    } \r\n    \r\n    useEffect(()=>{\r\n        if(!localStorage.getItem(\"USERTOKEN\")) {history.push(\"/login\")}\r\n        setFormData(customerList[findIndex()])\r\n        \r\n    }, [customerId])\r\n\r\n    return (\r\n            <StyledCreateForm>\r\n                {renderInput(<FontAwesomeIcon icon={faBuilding}/>,\"name\", \"Organisation Name\")}\r\n                {renderInput(<FontAwesomeIcon icon={faSitemap}/>,\"organisationNr\", \"Organisation Number\")}\r\n                {renderInput(<FontAwesomeIcon icon={faVuejs}/>, \"vatNr\", \"VAT number\")}\r\n                {renderInput(<FontAwesomeIcon icon={faMonero}/>, \"reference\", \"Reference\")}\r\n                {renderInput(<FontAwesomeIcon icon={faCashRegister}/>, \"paymentTerm\", \"Payment Term\")}\r\n                {renderInput(<FontAwesomeIcon icon={faFirefoxBrowser}/>, \"website\", \"website\", \"url\")}\r\n                {renderInput(<FontAwesomeIcon icon={faMailBulk}/>, \"email\", \"Email\")}\r\n                {renderInput(<FontAwesomeIcon icon={faPhoneAlt}/>, \"phoneNumber\", \"tel\")}\r\n                <Button \r\n                    handleClick={handleOnSubmit} \r\n                    update={true} \r\n                    label={\"update\"}/>\r\n            </StyledCreateForm>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}