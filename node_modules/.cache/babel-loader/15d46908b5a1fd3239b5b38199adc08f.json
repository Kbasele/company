{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\javascript\\\\Frontend3\\\\company-master\\\\src\\\\components\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport UserKit from '../data/fetchKit';\nimport { useHistory } from 'react-router-dom';\nimport { StyledLoginForm, styledLoginForm } from '../Style/StyledLoginForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faLock, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { StyledButton } from '../Style/StyledButton';\nimport { UserContext } from '../contexts/UserContext';\nexport default function LoginForm() {\n  _s();\n\n  const history = useHistory();\n  const {\n    isLogedIn,\n    setIsLogedIn\n  } = useContext(UserContext);\n  setIsLogedIn(true);\n  useEffect(() => {\n    localStorage.setItem(\"isLogedIn\", false);\n  }, []);\n  const [formData, setFormData] = useState({\n    email: \"kevin.basele@yh.nackademin.se\",\n    password: \"javascriptoramverk\"\n  });\n  const payload = {\n    email: formData.email,\n    password: formData.password\n  };\n\n  function handleOnChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    UserKit.loginFetch(payload).then(res => res.json()).then(data => {\n      localStorage.setItem(\"USERTOKEN\", data.token);\n      localStorage.setItem(\"isLogedIn\", true);\n      setIsLogedIn(true);\n      history.push(\"/homepage\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledLoginForm, {\n    onSubmit: handleOnSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        onChange: handleOnChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faLock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        onChange: handleOnChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      login: true,\n      children: \"LOG IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LoginForm, \"m6VsAL+OPzIf+tU0bSpVnd8wKuQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/javascript/Frontend3/company-master/src/components/LoginForm.jsx"],"names":["React","useState","useEffect","useContext","UserKit","useHistory","StyledLoginForm","styledLoginForm","FontAwesomeIcon","faCode","faLock","faUser","StyledButton","UserContext","LoginForm","history","isLogedIn","setIsLogedIn","localStorage","setItem","formData","setFormData","email","password","payload","handleOnChange","e","target","name","value","handleOnSubmit","preventDefault","loginFetch","then","res","json","data","token","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,0BAA/C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,mCAAvC;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AAKA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAACW,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA4Bd,UAAU,CAACU,WAAD,CAA5C;AACAI,EAAAA,YAAY,CAAC,IAAD,CAAZ;AAIAf,EAAAA,SAAS,CAAC,MAAI;AACTgB,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC,KAAlC;AACJ,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AACrCqB,IAAAA,KAAK,EAAE,+BAD8B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;AAKA,QAAMC,OAAO,GAAG;AACZF,IAAAA,KAAK,EAAEF,QAAQ,CAACE,KADJ;AAEZC,IAAAA,QAAQ,EAAEH,QAAQ,CAACG;AAFP,GAAhB;;AAKA,WAASE,cAAT,CAAwBC,CAAxB,EAA0B;AACtBL,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAxC,KAAD,CAAX;AAEH;;AAED,WAASC,cAAT,CAAwBJ,CAAxB,EAA0B;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACA3B,IAAAA,OAAO,CAAC4B,UAAR,CAAmBR,OAAnB,EACCS,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTlB,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCiB,IAAI,CAACC,KAAvC;AACAnB,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC,IAAlC;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAF,MAAAA,OAAO,CAACuB,IAAR,CAAa,WAAb;AACH,KARD;AASH;;AAED,sBACQ,QAAC,eAAD;AAAkB,IAAA,QAAQ,EAAER,cAA5B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,+BAAM,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEnB;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,QAAQ,EAAEc,cAA9B;AAA8C,QAAA,WAAW,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,8BACA;AAAA,+BAAM,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEf;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEe,cAAjC;AAAiD,QAAA,WAAW,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAeH;;GAtDuBX,S;UACJT,U;;;KADIS,S","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport UserKit from '../data/fetchKit'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {StyledLoginForm, styledLoginForm} from '../Style/StyledLoginForm'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCode, faLock, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { StyledButton } from '../Style/StyledButton'\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\n\r\n\r\n\r\nexport default function LoginForm() {\r\n    const history = useHistory()\r\n    const {isLogedIn, setIsLogedIn} = useContext(UserContext)\r\n    setIsLogedIn(true)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n         localStorage.setItem(\"isLogedIn\", false) \r\n    }, [])\r\n    \r\n    const [formData, setFormData] = useState({\r\n        email: \"kevin.basele@yh.nackademin.se\", \r\n        password: \"javascriptoramverk\"\r\n    })\r\n    \r\n    const payload = {\r\n        email: formData.email, \r\n        password: formData.password\r\n    }\r\n\r\n    function handleOnChange(e){\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n        \r\n    }\r\n\r\n    function handleOnSubmit(e){\r\n        e.preventDefault()\r\n        UserKit.loginFetch(payload)\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            localStorage.setItem(\"USERTOKEN\", data.token)\r\n            localStorage.setItem(\"isLogedIn\", true)\r\n            setIsLogedIn(true)\r\n            \r\n            history.push(\"/homepage\");\r\n        })\r\n    }\r\n    \r\n    return (\r\n            <StyledLoginForm  onSubmit={handleOnSubmit}>\r\n                <h1>Sign In</h1>\r\n                <div>\r\n                    <span><FontAwesomeIcon icon={faUser}/></span>\r\n                    <input name=\"email\" onChange={handleOnChange} placeholder={\"Email\"}/>\r\n                </div>\r\n                <div>\r\n                <span><FontAwesomeIcon icon={faLock}/></span>\r\n\r\n                <input name=\"password\" onChange={handleOnChange} placeholder={\"Password\"}/>\r\n                </div>\r\n                <StyledButton login={true}>LOG IN</StyledButton>\r\n            </StyledLoginForm>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}